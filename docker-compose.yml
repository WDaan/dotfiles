version: "3.1"
services:
  mysql-ram:
      image: circleci/mysql:5.7-ram
      container_name: mysql-ram
      restart: always
      environment:
        MYSQL_DATABASE: blendr_testing
        MYSQL_HOST: 127.0.0.1
        MYSQL_ROOT_HOST: '%'
        MYSQL_USER: dev
        MYSQL_PASSWORD: dev
      ports:
        - 3307:3306
      shm_size: 2G

  mysql:
    image: mysql:5.7
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password --max_allowed_packet=32505856
    restart: always
    volumes:
      - ./mysql/data:/var/lib/mysql
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      TZ: Europe/Brussels

  redis:
    container_name: redis
    image: redis
    ports:
      - 6379:6379
    volumes:
      - ./redis:/data
    entrypoint: redis-server --appendonly yes
    restart: always

  admin:
    image: phpmyadmin/phpmyadmin
    container_name: admin
    restart: always
    ports:
      - 8181:80
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: root
    depends_on:
      - mysql
    links:
      - mysql

  # ouroboros:
  #   container_name: ouroboros
  #   hostname: ouroboros
  #   image: pyouroboros/ouroboros
  #   environment:
  #     - CLEANUP=true
  #     - INTERVAL=86400 #24 hours
  #     - LOG_LEVEL=info
  #     - SELF_UPDATE=true
  #     - IGNORE="nginx proxy"
  #     - TZ=Europe/Brussels
  #   restart: unless-stopped
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock

  # proxy:
  #   image: jc21/nginx-proxy-manager:latest
  #   container_name: proxy
  #   restart: always
  #   ports:
  #     - '80:80'
  #     - '81:81'
  #     - '443:443'
  #   volumes:
  #     - /home/pi/Documents/Docker/Containers/proxy/config.json:/app/config/production.json
  #     - /home/pi/Documents/Docker/Containers/proxy/data:/data
  #     - /home/pi/Documents/Docker/Containers/proxy/letsencrypt:/etc/letsencrypt
  #   environment:
  #     DISABLE_IPV6: 'true'

  # portainer:
  #   image: portainer/portainer-ce
  #   container_name: portainer
  #   command: -H unix:///var/run/docker.sock
  #   restart: always
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /home/pi/Documents/Docker/Containers/portainer:/data